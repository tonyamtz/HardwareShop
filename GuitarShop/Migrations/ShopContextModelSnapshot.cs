// <auto-generated />
using HardwareShop.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HardwareShop.Migrations
{
    [DbContext(typeof(ShopContext))]
    partial class ShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HardwareShop.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Name = "Safety and Security"
                        },
                        new
                        {
                            CategoryID = 2,
                            Name = "Fire Safety"
                        },
                        new
                        {
                            CategoryID = 3,
                            Name = "Doors and Locks"
                        });
                });

            modelBuilder.Entity("HardwareShop.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            CategoryID = 1,
                            Code = "fire",
                            Name = "Fire Extenguisher",
                            Price = 29m
                        },
                        new
                        {
                            ProductID = 2,
                            CategoryID = 1,
                            Code = "fire",
                            Name = "Carbon Monoxide Detector",
                            Price = 19m
                        },
                        new
                        {
                            ProductID = 3,
                            CategoryID = 1,
                            Code = "safe",
                            Name = "MasterLock Combination Lock",
                            Price = 7m
                        },
                        new
                        {
                            ProductID = 4,
                            CategoryID = 1,
                            Code = "safe",
                            Name = "Gun Safe",
                            Price = 489.99m
                        },
                        new
                        {
                            ProductID = 5,
                            CategoryID = 1,
                            Code = "door",
                            Name = "Electronic Deadbolt Doorlock",
                            Price = 299m
                        },
                        new
                        {
                            ProductID = 6,
                            CategoryID = 1,
                            Code = "door",
                            Name = "Knob and Cylinder Deadbolt",
                            Price = 15m
                        },
                        new
                        {
                            ProductID = 7,
                            CategoryID = 2,
                            Code = "safe",
                            Name = "Outdoor Floodlight",
                            Price = 79.99m
                        },
                        new
                        {
                            ProductID = 8,
                            CategoryID = 2,
                            Code = "safe",
                            Name = "Window Alarm",
                            Price = 49.99m
                        },
                        new
                        {
                            ProductID = 9,
                            CategoryID = 3,
                            Code = "safe",
                            Name = "Asbestos Test Kit",
                            Price = 19.99m
                        },
                        new
                        {
                            ProductID = 10,
                            CategoryID = 3,
                            Code = "fire",
                            Name = "Ionization Smoke Detector",
                            Price = 19.99m
                        });
                });

            modelBuilder.Entity("HardwareShop.Models.Product", b =>
                {
                    b.HasOne("HardwareShop.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
